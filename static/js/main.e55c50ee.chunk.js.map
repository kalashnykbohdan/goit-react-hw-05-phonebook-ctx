{"version":3,"sources":["components/ContactList/contactList.module.css","components/Wrapper/Wrapper.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/context/ThemeContext.js","hoc/withTheme.js","components/Body.js","components/Header.js","components/App.js","index.js","components/ContactForm/contactForm.module.css"],"names":["module","exports","Wrapper","title","children","defaultProps","ContactList","contacts","onRemoveContact","map","id","name","number","key","type","className","style","BthDelete","onClick","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","Toast","TYPE_ERROR","TIME_NORMAL","props","onAddContact","this","theme","contactForm","onSubmit","p_label","onChange","submit_form","Component","Filter","onChangeFilter","themeConfig","light","headerBg","fontColor","bodybg","dark","formBorder","ThemeContext","React","createContext","withTheme","WrappedComponent","Consumer","WithTheme","filter","addContact","contact","nameExist","conatct","includes","prevState","removeContact","contactId","changeFilter","getVisibleContacts","toLowerCase","console","log","localStoreg","persistedTask","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","color","config","background","length","checked","event","toggleTheme","currentTarget","bind","themeNow","Provider","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e55c50ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BthDelete\":\"contactList_BthDelete__1Utw1\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Wrapper({title, children}){\r\n    return (\r\n        <div>\r\n            {title && <h2>{title}</h2>}\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nWrapper.defaultProps = {\r\n    title: '',\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\r\nimport style from'./contactList.module.css';\r\n\r\nconst ContactList = ({contacts, onRemoveContact}) =>(\r\n  <ul>\r\n    {contacts.map(({id, name, number}) => \r\n    \r\n      <li key={name}>\r\n        <span>{name} : {number}</span>\r\n        <button type=\"button\" className={style.BthDelete} onClick={() => onRemoveContact(id)}>Delete</button>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\nexport default ContactList;","import React, {Component} from 'react';\r\nimport style from'./contactForm.module.css';\r\nimport { Toast } from \"toaster-js\"\r\nimport \"toaster-js/default.css\";\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name:'',\r\n        number:'',\r\n    };\r\n    handleChange = e => {\r\n\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]:value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        \r\n        if(this.state.name === '' || this.state.number === ''){\r\n\r\n            new Toast(\"Не введено имя, или номер телефона!\", Toast.TYPE_ERROR, Toast.TIME_NORMAL);    \r\n        }\r\n        else{\r\n            this.props.onAddContact(this.state.name, this.state.number);\r\n        }\r\n        this.setState({name:'',number:''});\r\n    }\r\n\r\n    render() {\r\n        const theme = this.props.theme;\r\n\r\n        const {name, number} = this.state;\r\n        return (\r\n\r\n            \r\n            <form className={style.contactForm} onSubmit={this.handleSubmit}>\r\n                <label>\r\n                <p className={style.p_label}>Name</p>\r\n                    <input \r\n                        className=\"Name-input\"\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                        name=\"name\"\r\n                    />\r\n                </label>\r\n                <p className={style.p_label}>Namber</p>\r\n                    <input \r\n                        className=\"Number-input\"\r\n                        type=\"tel\" \r\n                        value={number} \r\n                        onChange={this.handleChange}\r\n                        name=\"number\"\r\n                    />\r\n                <br/>\r\n                <button type=\"submit\" className={style.submit_form}>Add contact</button>\r\n                \r\n            </form>\r\n      )\r\n    };\r\n}\r\n\r\nexport default ContactForm;\r\n\r\n","import React from 'react';\r\n\r\nexport default function Filter({value, onChangeFilter}) {\r\n    return(\r\n        <div>\r\n            <input \r\n                type=\"text\" \r\n                className=\"TaskEditor-input\" \r\n                value={value} \r\n                onChange={e => onChangeFilter(e.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const themeConfig = {\r\n    light: {\r\n        headerBg: '#F7B30C',\r\n        fontColor: 'black',\r\n        bodybg: 'white',\r\n\r\n    },\r\n    dark: {\r\n        headerBg: '#626262',\r\n        fontColor: 'white',\r\n        bodybg: '#3c3c3c',\r\n        formBorder: 'white',\r\n\r\n    }\r\n};\r\nconst ThemeContext = React.createContext(themeConfig.light);\r\nexport default ThemeContext;","import React from 'react'\r\nimport ThemeContext from '../components/context/ThemeContext';\r\n\r\nconst withTheme = WrappedComponent => {\r\n\r\n  return function WithTheme(props) {\r\n\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {theme => <WrappedComponent {...props} theme={theme} />}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withTheme;\r\n\r\n","import React, { Component } from 'react';\r\nimport ContactList from './ContactList';\r\nimport ContactForm from './ContactForm';\r\nimport Filter from './Filter'\r\n\r\nimport WithTheme from '../hoc/withTheme'\r\n\r\nimport ThemeContext from './context/ThemeContext';\r\nimport { Toast } from \"toaster-js\"\r\nimport \"toaster-js/default.css\";\r\n\r\nclass Body extends Component{\r\n\r\n  state = {\r\n    contacts: [\r\n        {name: 'Rosie Simpson', number: '459-12-56'},\r\n        {name: 'Hermione Kline', number: '443-89-12'},\r\n        {name: 'Eden Clements', number: '645-17-79'},\r\n        {name: 'Annie Copeland', number: '227-91-26'},\r\n      ],\r\n    filter:'',\r\n  };\r\n  addContact = (name, number) =>{\r\n    \r\n    const contact = {\r\n      name,\r\n      number,\r\n    }\r\n\r\n    const nameExist = this.state.contacts.map(conatct => conatct.name).includes(name);\r\n\r\n    this.setState(prevState =>{\r\n      if(nameExist){\r\n        new Toast(`${name} is already in contacts`, Toast.TYPE_ERROR, Toast.TIME_NORMAL);\r\n      }else{\r\n        return{\r\n          contacts: [...prevState.contacts,contact],\r\n        }\r\n      }\r\n\r\n    })\r\n  };\r\n\r\n  componentDidMount(){\r\n    console.log('Contacts componentDidMount')\r\n    this.localStoreg();\r\n  }\r\n\r\n  localStoreg(){\r\n    const persistedTask = localStorage.getItem('contacts');\r\n\r\n    if(persistedTask){\r\n      this.setState({\r\n        contacts: JSON.parse(persistedTask)\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    console.log('Contacts componentDidUpdate');\r\n\r\n    console.log('prevState: ', prevState);\r\n    console.log('this.state: ', this.state);\r\n\r\n    if(prevState.contacts !== this.state.contacts)\r\n    {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  removeContact = contactId => {\r\n    this.setState(prevState => {\r\n      return{\r\n        contacts: prevState.contacts.filter(({id}) => id !== contactId),\r\n      }\r\n    })\r\n  }\r\n    handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        if(this.state.name === '' || this.state.number === ''){\r\n            new Toast(\"Не введено имя, или номер телефона!\", Toast.TYPE_ERROR, Toast.TIME_NORMAL);    \r\n        }\r\n        else{\r\n            this.props.onAddContact(this.state.name, this.state.number);\r\n        }\r\n\r\n        this.setState({name:'', number:''});\r\n    }\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const {contacts, filter} = this.state\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const {filter} = this.state;\r\n\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    const theme = this.props.theme;\r\n\r\n    return (\r\n        <div className=\"main\" style={{color: theme.config.fontColor, background: theme.config.bodybg}} >\r\n            \r\n            <h2>ContactForm</h2>\r\n            <ContactForm onAddContact={this.addContact} />\r\n        \r\n            <h2>Contacts</h2>\r\n            <Filter \r\n            value={filter} \r\n            onChangeFilter={this.changeFilter}\r\n            />\r\n\r\n            {visibleContacts.length > 0 && \r\n            <ContactList \r\n            contacts={visibleContacts} \r\n            onRemoveContact={this.removeContact} \r\n            />}\r\n        </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default WithTheme(Body);","import React, { Component } from 'react'\r\nimport ThemeContext from './context/ThemeContext';\r\nimport '../index.css' \r\nimport WithTheme from '../hoc/withTheme'\r\n\r\nclass Header extends Component {\r\n    \r\n  render() {\r\n    \r\n    const theme = this.props.theme;\r\n\r\n    return (\r\n\r\n                    <header style={{ background: theme.config.headerBg, color: theme.config.fontColor }}>\r\n\r\n                        <div className=\"theme-selector\">\r\n                        <span className=\"label\">({theme.type})</span>\r\n                        <label className=\"switch\">\r\n                            <input type=\"checkbox\" checked={theme.type === 'light'} onChange={(event) => this.props.toggleTheme(event.currentTarget.value)} />\r\n                            <span className=\"slider round\"></span>\r\n                            \r\n                        </label>\r\n                        </div>\r\n                    </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WithTheme(Header)\r\n","import React, { Component } from 'react';\nimport Wrapper from './Wrapper';\n\nimport Body from './Body';\n\nimport ThemeContext from './context/ThemeContext';\nimport {themeConfig} from './context/ThemeContext';\nimport Header from './Header';\nimport withTheme   from \"../hoc/withTheme\"\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = {\n      theme: 'light'\n    }\n    this.toggleTheme = this.toggleTheme.bind(this);\n  }\n\n\n  localStoreg(){\n    const themeNow = localStorage.getItem('theme');\n\n    if(themeNow){\n      this.setState({\n        theme: JSON.parse(themeNow)\n      })\n    }\n  }\n  componentDidMount(){\n    console.log('Contacts componentDidMount')\n    this.localStoreg();\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    console.log('theme componentDidUpdate');\n    localStorage.setItem('theme', JSON.stringify(this.state.theme));\n\n  }\n// ---------------------------------------------------------------------------\n  toggleTheme() {\n    // console.log({});\n    console.log(this.state.theme);\n    console.log(\"toggleTheme\");\n    this.setState({\n      theme: this.state.theme === \"dark\" ? \"light\" : \"dark\"\n    });\n  }\n  // ---------------------------------------------------------------------------\n\n  render() {\n\n    return (\n        <ThemeContext.Provider value={{type: this.state.theme, config: themeConfig[this.state.theme]}}>\n          <Wrapper>\n            <Header toggleTheme={this.toggleTheme}/>\n            <Body/>\n          </Wrapper>\n        </ThemeContext.Provider>\n    )\n  };\n}\nexport default withTheme(App);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\n\nReactDOM.render(<App/>, document.querySelector(\"#root\"));\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__NFFmN\",\"submit_form\":\"contactForm_submit_form__1JJbp\",\"p_label\":\"contactForm_p_label__dNXNp\"};"],"sourceRoot":""}